"""–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥/–∫–Ω–æ–ø–æ–∫ (aiogram¬†3).

–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è ``register_routers()`` ‚Äî –∏–º–µ–Ω–Ω–æ –µ—ë –≤—ã–∑—ã–≤–∞–µ—Ç
``main.py`` –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ.
"""

from __future__ import annotations

from aiogram import F, Router, types, Dispatcher
from aiogram.filters import Command, CommandStart
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from db import async_session
from crud import get_or_create_user
from .guide_spb import router as guide_spb_router
from .about_apartments import router as about_apartments_router
from .about_apartments import main_menu_kb


__all__ = ["register_routers"]

router = Router(name="main")

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

KB_START = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="‚ñ∂Ô∏è Start")]],
    resize_keyboard=True,
)

KB_MAIN = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üîë –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å")],  # –±–æ–ª—å—à–∞—è –∫–Ω–æ–ø–∫–∞
        [KeyboardButton(text="üìã –û–± –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞—Ö"), KeyboardButton(text="üóìÔ∏è –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏ —Ü–µ–Ω—ã")],
        [KeyboardButton(text="üìç –ì–∏–¥ –ø–æ –°–ü–±"), KeyboardButton(text="‚ùì FAQ –∏ –ø–æ–º–æ—â—å")],
    ],
    resize_keyboard=True,
)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –•–µ–Ω–¥–ª–µ—Ä—ã
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

@router.message(CommandStart())
async def cmd_start(message: types.Message) -> None:
    #print("üî• –•–µ–Ω–¥–ª–µ—Ä /start —Å—Ä–∞–±–æ—Ç–∞–ª!")  # ‚Üê –≤—Ä–µ–º–µ–Ω–Ω–æ
    """/start ‚Äî —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –∫–Ω–æ–ø–∫–∞ '–°—Ç–∞—Ä—Ç'."""
    await message.answer(
        text=(
            "‚ú® <b>–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –≤ —Ü–µ–Ω—Ç—Ä–µ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞</b> ‚ú®\n"
            "–£—é—Ç, —Å—Ç–∏–ª—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç ‚Äî –≤—Å–µ–≥–æ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–ª–∏–∫–∞—Ö üõèÔ∏è\n"
            "–ó–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –æ—Ç–¥—ã—Ö —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!\n\n"
            "üëá –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b></b>, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."
        ),
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="‚ñ∂Ô∏è Start")]],
            resize_keyboard=True,
            one_time_keyboard=True  # üîπ –ö–Ω–æ–ø–∫–∞ —Å–∫—Ä–æ–µ—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
        )
    )

@router.message(Command("menu"))
@router.message(F.text == "‚ñ∂Ô∏è Start")
#async def show_main_menu(message: types.Message) -> None:
#    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=KB_MAIN)
async def show_main_menu(message: types.Message) -> None:
    from .about_apartments import main_menu_kb
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –≤ –ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é üìã",
        reply_markup=KB_MAIN
    )

@router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def back_to_main(message: types.Message) -> None:
    await message.answer("–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.", reply_markup=KB_MAIN)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ –≤ Dispatcher
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

def register_routers(dp: Dispatcher) -> None:
    dp.include_router(router)
    dp.include_router(guide_spb_router)
    dp.include_router(about_apartments_router)


@router.message(F.text == "üîë –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å")
async def booking_placeholder(message: types.Message):
    await message.answer(
        "üîß –¢—É—Ç –±—É–¥–µ—Ç –º–æ–¥—É–ª—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!\n–í—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—ã, –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—Ä—è–º–æ –≤ –±–æ—Ç–µ."
    )