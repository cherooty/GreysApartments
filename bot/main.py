# bot/main.py
# E:
# cd E:\ProjectsLinux\arendaSPBot
# py -m venv .venv 
# .\.venv\Scripts\activate
# python -m pip install --upgrade pip
# pip install -r requirements.txt
# python -m bot.main

#Ubuntu: –≤ –∫–æ—Ä–Ω–µ
# python3.10 -m venv venv1
# source venv1/bin/activate
# ! pip install -r requirements.txt
# 


"""–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è Greys¬†Apart Bot (aiogram‚ÄØ3.20).

–ó–∞–ø—É—Å–∫:
    (.venv) PS> python -m bot.main
"""

from __future__ import annotations

import asyncio
import logging
import sys
from pathlib import Path

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage

from .config import settings
from db import init_db
from .handlers import register_routers

BASE_DIR = Path(__file__).resolve().parent.parent  # –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞


def configure_logging() -> None:
    """–ï–¥–∏–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è."""
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s [%(levelname)s] %(name)s: %(message)s",
        handlers=[logging.StreamHandler(sys.stdout)],
    )


def create_bot() -> Bot:
    """–°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä Bot (aiogram —Å–∞–º –∑–∞–≤–µ–¥—ë—Ç aiohttp‚Äë—Å–µ—Å—Å–∏—é)."""
    return Bot(
        token=settings.bot_token,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML),
    )


async def main() -> None:
    configure_logging()

    # 1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î (—Å–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)
    await init_db()

    # 2Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞–µ–º long‚Äëpolling
    bot = create_bot()
    dp = Dispatcher(storage=MemoryStorage())
    register_routers(dp)

    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω‚Ä¶")
    await dp.start_polling(bot)


if __name__ == "__main__":  # pragma: no cover
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logging.warning("‚õî –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
